// Code generated by MockGen. DO NOT EDIT.
// Source: client/sunrisesunset.go
//
// Generated by this command:
//
//	mockgen --source=client/sunrisesunset.go --destination=mocks/sunrisesunsetClient_mock.go --package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSunriseSunsetClient is a mock of SunriseSunsetClient interface.
type MockSunriseSunsetClient struct {
	ctrl     *gomock.Controller
	recorder *MockSunriseSunsetClientMockRecorder
}

// MockSunriseSunsetClientMockRecorder is the mock recorder for MockSunriseSunsetClient.
type MockSunriseSunsetClientMockRecorder struct {
	mock *MockSunriseSunsetClient
}

// NewMockSunriseSunsetClient creates a new mock instance.
func NewMockSunriseSunsetClient(ctrl *gomock.Controller) *MockSunriseSunsetClient {
	mock := &MockSunriseSunsetClient{ctrl: ctrl}
	mock.recorder = &MockSunriseSunsetClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSunriseSunsetClient) EXPECT() *MockSunriseSunsetClientMockRecorder {
	return m.recorder
}

// GetSunriseSunsetData mocks base method.
func (m *MockSunriseSunsetClient) GetSunriseSunsetData(latitude, longitude string) any {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSunriseSunsetData", latitude, longitude)
	ret0, _ := ret[0].(any)
	return ret0
}

// GetSunriseSunsetData indicates an expected call of GetSunriseSunsetData.
func (mr *MockSunriseSunsetClientMockRecorder) GetSunriseSunsetData(latitude, longitude any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSunriseSunsetData", reflect.TypeOf((*MockSunriseSunsetClient)(nil).GetSunriseSunsetData), latitude, longitude)
}
